{\rtf1\ansi\ansicpg1251\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww31720\viewh19600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # \uc0\u1048 \u1084 \u1087 \u1086 \u1088 \u1090  \u1085 \u1077 \u1086 \u1073 \u1093 \u1086 \u1076 \u1080 \u1084 \u1099 \u1093  \u1073 \u1080 \u1073 \u1083 \u1080 \u1086 \u1090 \u1077 \u1082 \
import pynmea2				# \uc0\u1087 \u1072 \u1088 \u1089 \u1080 \u1085 \u1075  NMEA \u1076 \u1072 \u1085 \u1085 \u1099 \u1093  (GPS)\
import xlsxwriter				# \uc0\u1088 \u1072 \u1073 \u1086 \u1090 \u1072  \u1089  Excel\
\
import RPi.GPIO as GPIO			# \uc0\u1087 \u1086 \u1088 \u1090 \u1099  \u1074 \u1074 \u1086 \u1076 \u1072 -\u1074 \u1099 \u1074 \u1086 \u1076 \u1072 \
import picamera				# \uc0\u1082 \u1072 \u1084 \u1077 \u1088 \u1072 \
from PIL import Image			# \uc0\u1080 \u1079 \u1086 \u1073 \u1088 \u1072 \u1078 \u1077 \u1085 \u1080 \u1077 \
from time import sleep			# \uc0\u1079 \u1072 \u1076 \u1077 \u1088 \u1078 \u1082 \u1072 \
import curses					# \uc0\u1088 \u1080 \u1089 \u1086 \u1074 \u1072 \u1085 \u1080 \u1077 \
import sys, select, os				# \uc0\u1089 \u1080 \u1089 \u1090 \u1077 \u1084 \u1085 \u1099 \u1077 \
from datetime import datetime		# \uc0\u1076 \u1072 \u1090 \u1072 \
from datetime import timedelta		# \uc0\u1074 \u1088 \u1077 \u1084 \u1103 \
from shutil import copyfile			# \uc0\u1082 \u1086 \u1087 \u1080 \u1088 \u1086 \u1074 \u1072 \u1085 \u1080 \u1077  \u1092 \u1072 \u1081 \u1083 \u1086 \u1074 \
\
import serial					# \uc0\u1089 \u1077 \u1088 \u1080 \u1081 \u1085 \u1099 \u1081  \u1087 \u1086 \u1088 \u1090 \
import string					# \uc0\u1089 \u1090 \u1088 \u1086 \u1082 \u1080 \
from pygame import mixer			# \uc0\u1072 \u1091 \u1076 \u1080 \u1086 -\u1084 \u1080 \u1082 \u1096 \u1077 \u1088 \
\
import gtk						# \
# Import SPI library (for hardware SPI) and MCP3008 library.\
import Adafruit_GPIO.SPI as SPI	#  hardware SPI\
import Adafruit_MCP3008			# \uc0\u1073 \u1080 \u1073 \u1083 \u1080 \u1086 \u1090 \u1077 \u1082 \u1072  \u1040 \u1062 \u1055 \
\
# Software SPI configuration (\uc0\u1087 \u1086 \u1088 \u1090 \u1099  \u1076 \u1083 \u1103  SPI \u1096 \u1080 \u1085 \u1099 ):\
CLK  = 18\
MISO = 23\
MOSI = 24\
CS   = 8 #25\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 # \uc0\u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103  \u1040 \u1062 \u1055 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 mcp = Adafruit_MCP3008.MCP3008(clk=CLK, cs=CS, miso=MISO, mosi=MOSI)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 GPIO.setwarnings(False)			# \uc0\u1086 \u1090 \u1082 \u1083 \u1102 \u1095 \u1072 \u1077 \u1084  \u1074 \u1072 \u1088 \u1085 \u1080 \u1085 \u1075 \u1080 \
sleep (2)						# \uc0\u1089 \u1087 \u1080 \u1084  2 \u1089 \u1077 \u1082 \u1091 \u1085 \u1076 \u1099 \
port = "/dev/ttyAMA0"			# \uc0\u1085 \u1072 \u1079 \u1085 \u1072 \u1095 \u1077 \u1085 \u1080 \u1077  \u1089 \u1077 \u1088 \u1080 \u1081 \u1085 \u1086 \u1075 \u1086  \u1087 \u1086 \u1088 \u1090 \u1072  \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 # \uc0\u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103  \u1089 \u1077 \u1088 \u1080 \u1081 \u1085 \u1086 \u1075 \u1086  \u1087 \u1086 \u1088 \u1090 \u1072 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 ser = serial.Serial(port, baudrate = 9600, timeout = 0.5)\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 MAX_UF = 33					# \uc0\u1084 \u1072 \u1082 \u1089 \u1080 \u1084 \u1072 \u1083 \u1100 \u1085 \u1086 \u1077  \u1082 \u1086 \u1083 \u1080 \u1095 \u1077 \u1089 \u1090 \u1074 \u1086  \u1080 \u1084 \u1087 \u1091 \u1083 \u1100 \u1089 \u1086 \u1074 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 start_time = datetime.now()		# \uc0\u1089 \u1080 \u1085 \u1093 \u1088 \u1086 \u1085 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103  \u1076 \u1072 \u1090 \u1099 \
\
#Adress of USB_FLASH: /media/pi/8FAT\
\
# ====== \uc0\u1060 \u1059 \u1053 \u1050 \u1062 \u1048 \u1071  \u1056 \u1040 \u1057 \u1063 \u1045 \u1058 \u1040  \u1052 \u1048 \u1051 \u1051 \u1048 \u1057 \u1045 \u1050 \u1059 \u1053 \u1044  \u1057 \u1054  \u1057 \u1058 \u1040 \u1056 \u1058 \u1040  \u1055 \u1056 \u1054 \u1043 \u1056 \u1040 \u1052 \u1052 \u1067  =====\
def millis():\
   dt = datetime.now() - start_time\
   ms = (dt.days * 24 * 60 * 60 + dt.seconds) * 1000 + dt.microseconds / 1000.0\
   return ms\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 impulse = 0					# \uc0\u1082 \u1086 \u1083 \u1080 \u1095 \u1077 \u1089 \u1090 \u1074 \u1086  \u1080 \u1084 \u1087 \u1091 \u1083 \u1100 \u1089 \u1086 \u1074 \
nowTime = 0					# \uc0\u1090 \u1077 \u1082 \u1091 \u1097 \u1077 \u1077  \u1074 \u1088 \u1077 \u1084 \u1103 \
now_imp = 0					# \uc0\u1090 \u1077 \u1082 \u1091 \u1097 \u1077 \u1077  \u1082 \u1086 \u1083 \u1080 \u1095 \u1077 \u1089 \u1090 \u1074 \u1086  \u1080 \u1084 \u1087 \u1091 \u1083 \u1100 \u1089 \u1086 \u1074 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 # \uc0\u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103  \u1075 \u1088 \u1072 \u1092 \u1080 \u1095 \u1077 \u1089 \u1082 \u1086 \u1075 \u1086  \u1080 \u1085 \u1090 \u1077 \u1088 \u1092 \u1077 \u1081 \u1089 \u1072  \u1080  \u1089 \u1086 \u1079 \u1076 \u1072 \u1085 \u1080 \u1077  \u1086 \u1082 \u1085 \u1072 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 curses.initscr()\
win = curses.newwin(0, 0)\
\
dx = 0						# \uc0\u1089 \u1076 \u1074 \u1080 \u1075  \u1087 \u1086  \u1061 \
dy = 0						# \uc0\u1089 \u1076 \u1074 \u1080 \u1075  \u1087 \u1086  \u1059 \
ov_width = 0					# \uc0\u1096 \u1080 \u1088 \u1080 \u1085 \u1072  \u1086 \u1074 \u1077 \u1088 \u1083 \u1077 \u1103 \
ov_height = 0					# \uc0\u1074 \u1099 \u1089 \u1086 \u1090 \u1072  \u1086 \u1074 \u1077 \u1088 \u1083 \u1077 \u1103 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 # \uc0\u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103  \u1082 \u1072 \u1084 \u1077 \u1088 \u1099 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 camera = picamera.PiCamera()\
\
resX = 800					# \uc0\u1088 \u1072 \u1079 \u1088 \u1077 \u1096 \u1077 \u1085 \u1080 \u1077  \u1087 \u1086  \u1061 \
resY = 380					# \uc0\u1088 \u1072 \u1079 \u1088 \u1077 \u1096 \u1077 \u1085 \u1080 \u1077  \u1087 \u1086  \u1059 \
zoomVal = 1.0					# \uc0\u1090 \u1077 \u1082 \u1091 \u1097 \u1080 \u1081  \u1079 \u1091 \u1084 \u1080 \u1085 \u1075 \
zoomStep = 0.1					# \uc0\u1096 \u1072 \u1075  \u1079 \u1091 \u1084 \u1072 \
numShots = 0					# \uc0\u1089 \u1095 \u1077 \u1090 \u1095 \u1080 \u1082  \u1089 \u1085 \u1072 \u1087 \u1096 \u1086 \u1090 \u1086 \u1074 \
lat = 0						# \uc0\u1096 \u1080 \u1088 \u1086 \u1090 \u1072 \
lon = 0						# \uc0\u1076 \u1086 \u1083 \u1075 \u1086 \u1090 \u1072 \
overlay_now = "none"			# \uc0\u1090 \u1077 \u1082 \u1091 \u1097 \u1080 \u1081  \u1086 \u1074 \u1077 \u1088 \u1083 \u1077 \u1081 \
\
\
catched = True					# \uc0\u1073 \u1091 \u1083 \u1086 \u1085 \u1089 \u1082 \u1072 \u1103  \u1087 \u1077 \u1088 \u1077 \u1084 \u1077 \u1085 \u1085 \u1072 \u1103  \u1085 \u1072 \u1083 \u1080 \u1095 \u1080 \u1103  \u1080 \u1084 \u1087 \u1091 \u1083 \u1100 \u1089 \u1086 \u1074 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 # \uc0\u1091 \u1089 \u1090 \u1072 \u1085 \u1086 \u1074 \u1082 \u1072  \u1087 \u1086 \u1088 \u1090 \u1086 \u1074  \u1074 \u1074 \u1086 \u1076 \u1072 -\u1074 \u1099 \u1074 \u1086 \u1076 \u1072  \u1080  \u1076 \u1086 \u1073 \u1072 \u1074 \u1083 \u1077 \u1085 \u1080 \u1077  \u1074 \u1089 \u1090 \u1088 \u1086 \u1077 \u1085 \u1085 \u1086 \u1075 \u1086  \u1087 \u1086 \u1076 \u1090 \u1103 \u1075 \u1080 \u1074 \u1072 \u1102 \u1097 \u1077 \u1075 \u1086  \u1088 \u1077 \u1079 \u1080 \u1089 \u1090 \u1086 \u1088 \u1072 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 GPIO.setmode(GPIO.BCM)\
GPIO.setup(14, GPIO.IN, pull_up_down = GPIO.PUD_UP)#added pull_up_down\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 # \uc0\u1086 \u1073 \u1085 \u1091 \u1083 \u1077 \u1085 \u1080 \u1077  \u1085 \u1072 \u1095 \u1072 \u1083 \u1100 \u1085 \u1099 \u1093  \u1079 \u1085 \u1072 \u1095 \u1077 \u1085 \u1080 \u1081 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 nowTime = millis() \
i = 0\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 # ====== \uc0\u1043 \u1051 \u1040 \u1042 \u1053 \u1067 \u1049  \u1050 \u1051 \u1040 \u1057 \u1057  \u1055 \u1056 \u1054 \u1043 \u1056 \u1040 \u1052 \u1052 \u1067  ======\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 class MainClass:\
	\
    # ====== \uc0\u1060 \u1059 \u1053 \u1050 \u1062 \u1048 \u1071  \u1050 \u1051 \u1048 \u1050 \u1040  \'ab\u1042 \u1067 \u1061 \u1054 \u1044 \'bb ======\
    def clicked_exit(self, widget):\
        mixer.music.stop()			# \uc0\u1086 \u1089 \u1090 \u1072 \u1085 \u1086 \u1074 \u1082 \u1072  \u1084 \u1080 \u1082 \u1096 \u1077 \u1088 \u1072 \
        workbook_linux.close()		# \uc0\u1079 \u1072 \u1082 \u1088 \u1099 \u1090 \u1080 \u1077  \u1082 \u1085 \u1080 \u1075 \u1080  \u1085 \u1072  \u1091 \u1089 \u1090 \u1088 \u1086 \u1081 \u1089 \u1090 \u1074 \u1077 \
        workbook_usb.close()		# \uc0\u1079 \u1072 \u1082 \u1088 \u1099 \u1090 \u1080 \u1077  \u1082 \u1085 \u1080 \u1075 \u1080  \u1085 \u1072  USB\
        camera.close()				# \uc0\u1074 \u1099 \u1075 \u1088 \u1091 \u1079 \u1082 \u1072  \u1082 \u1072 \u1084 \u1077 \u1088 \u1099 \
        sys.exit()					# \uc0\u1074 \u1099 \u1093 \u1086 \u1076  \u1080 \u1079  \u1087 \u1088 \u1086 \u1075 \u1088 \u1072 \u1084 \u1084 \u1099 \
    \
    # ====== \uc0\u1060 \u1059 \u1053 \u1050 \u1062 \u1048 \u1071  \u1050 \u1051 \u1048 \u1050 \u1040  \'ab\u1057 \u1053 \u1040 \u1055 \u1064 \u1054 \u1058 \'bb ======\
    def clicked_capture(self, widget):\
        #time.sleep(1)\
        #camera.annotate_text = 'CAPTURING...'\
\
        global numShots\
\
	# \uc0\u1079 \u1072 \u1087 \u1080 \u1089 \u1100  \u1074  \u1082 \u1085 \u1080 \u1075 \u1091  \u1085 \u1072  \u1091 \u1089 \u1090 \u1088 \u1086 \u1081 \u1089 \u1090 \u1074 \u1077 \
        worksheet_linux.write(numShots+1, 0, str(numShots))\
        worksheet_linux.write(numShots+1, 1, str(time.strftime("%d_%m_%Y")))\
        worksheet_linux.write(numShots+1, 2, str(time.strftime("%H-%M-%S_")))\
        worksheet_linux.write(numShots+1, 3, str(now_imp))\
        worksheet_linux.write(numShots+1, 4, str(lat))\
        worksheet_linux.write(numShots+1, 5, str(lon))\
        #time.sleep(1)\
\
	# \uc0\u1079 \u1072 \u1087 \u1080 \u1089 \u1100  \u1074  \u1082 \u1085 \u1080 \u1075 \u1091  \u1085 \u1072  USB\
        worksheet_usb.write(numShots+1, 0, str(numShots))\
        worksheet_usb.write(numShots+1, 1, str(time.strftime("%d_%m_%Y")))\
        worksheet_usb.write(numShots+1, 2, str(time.strftime("%H-%M-%S_")))\
        worksheet_usb.write(numShots+1, 3, str(now_imp))\
        worksheet_usb.write(numShots+1, 4, str(lat))\
        worksheet_usb.write(numShots+1, 5, str(lon))\
        #time.sleep(1)\
\
	# \uc0\u1089 \u1086 \u1093 \u1088 \u1072 \u1085 \u1077 \u1085 \u1080 \u1077  \u1080 \u1079 \u1086 \u1073 \u1088 \u1072 \u1078 \u1077 \u1085 \u1080 \u1103  \u1085 \u1072  \u1091 \u1089 \u1090 \u1088 \u1086 \u1081 \u1089 \u1090 \u1074 \u1077  \u1080  \u1082 \u1086 \u1087 \u1080 \u1088 \u1086 \u1074 \u1072 \u1085 \u1080 \u1077  \u1077 \u1075 \u1086  \u1085 \u1072  USB\
        filename = 'snap' + str(numShots) + '_' + time.strftime("%H-%M-%S_") + time.strftime("%d_%m_%Y") + '.jpg'\
        camera.capture('/home/pi/Desktop/Devastor_camera/images/' + filename)\
        sleep(1)\
        #source = 'images/' + filename\
        #dest = '/home/pi/Desktop/Devastor_camera/test' + filename\
        #'/media/pi/8FAT/' + filename\
        #os.popen('cp ' + source + dest) \
        copyfile('/home/pi/Desktop/Devastor_camera/images/' + filename, '/media/pi/8FAT/' + filename)\
        numShots += 1 \
\
    # ====== \uc0\u1060 \u1059 \u1053 \u1050 \u1062 \u1048 \u1071  \u1050 \u1051 \u1048 \u1050 \u1040  \'ab\u1047 \u1059 \u1052  \u1055 \u1051 \u1070 \u1057 \'bb ======\
    def clicked_plus(self, widget):\
        global zoomVal\
        if (zoomVal > zoomStep*2):\
            zoomVal -= zoomStep\
        camera.zoom = (0, 0, zoomVal, zoomVal)\
\
    # ====== \uc0\u1060 \u1059 \u1053 \u1050 \u1062 \u1048 \u1071  \u1050 \u1051 \u1048 \u1050 \u1040  \'ab\u1047 \u1059 \u1052  \u1052 \u1048 \u1053 \u1059 \u1057 \'bb ======\
    def clicked_minus(self, widget):\
        global zoomVal\
        if (zoomVal < 1):\
            zoomVal += zoomStep\
        camera.zoom = (0, 0, zoomVal, zoomVal)\
    \
    # ====== \uc0\u1060 \u1059 \u1053 \u1050 \u1062 \u1048 \u1071  \u1059 \u1044 \u1040 \u1051 \u1045 \u1053 \u1048 \u1071  \u1054 \u1042 \u1045 \u1056 \u1051 \u1045 \u1071  ======\
    def removeCurrentOverlay(self, ov_name):\
        if (ov_name == "red"):\
            camera.remove_overlay(pad_red)\
        elif (ov_name == "orange"):\
            camera.remove_overlay(pad_orange)\
        elif (ov_name == "yellow"):\
            camera.remove_overlay(pad_yellow)\
        elif (ov_name == "green"):\
            camera.remove_overlay(pad_green)\
        elif (ov_name == "cyan"):\
            camera.remove_overlay(pad_cyan)\
        elif (ov_name == "blue"):\
            camera.remove_overlay(pad_cyan)\
        elif (ov_name == "violet"):\
            camera.remove_overlay(pad_violet)\
\
    # ====== \uc0\u1060 \u1059 \u1053 \u1050 \u1062 \u1048 \u1071  \u1048 \u1053 \u1048 \u1062 \u1048 \u1040 \u1051 \u1048 \u1047 \u1040 \u1062 \u1048 \u1048  \u1054 \u1042 \u1045 \u1056 \u1051 \u1045 \u1071  ======\
    def camera_overlay_init(self):\
        global pad_red\
        global pad_orange\
        global pad_yellow\
        global pad_green\
        global pad_cyan\
        global pad_blue\
        global pad_violet\
        \
        global img_red\
        global img_orange\
        global img_yellow\
        global img_green\
        global img_cyan\
        global img_blue\
        global img_violet\
	\
        # \uc0\u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103  \u1074 \u1089 \u1077 \u1093  \u1074 \u1072 \u1088 \u1080 \u1072 \u1085 \u1090 \u1086 \u1074  \u1086 \u1074 \u1077 \u1088 \u1083 \u1077 \u1103 \
        img_red = Image.open('/home/pi/Desktop/Devastor_camera/overlays/overlay_red.png')\
        ov_width = img_red.size[0]\
        ov_height = img_red.size[1]\
        #pad_red = Image.new('RGBA', (ov_width, ov_height))\
        #pad_red.paste(img_red, (0, 0), img_red)\
        pad_red = Image.new('RGBA', (((img_red.size[0] + 31) // 32) * 32, ((img_red.size[1] + 15) // 16) * 16))\
        pad_red.paste(img_red, (0, 0))\
        ov_red = camera.add_overlay(pad_red.tobytes(), format = 'rgba', size=img_red.size)\
        ov_red.layer = 3\
        overlay_now = "red"\
        \
        img_orange = Image.open('/home/pi/Desktop/Devastor_camera/overlays/overlay_orange.png')\
        pad_orange = Image.new('RGBA', (ov_width, ov_height))\
        pad_orange.paste(img_orange, (0, 0), img_orange)\
            \
        img_yellow = Image.open('/home/pi/Desktop/Devastor_camera/overlays/overlay_yellow.png')\
        pad_yellow = Image.new('RGBA', (ov_width, ov_height))\
        pad_yellow.paste(img_yellow, (0, 0), img_yellow)\
            \
        img_green = Image.open('/home/pi/Desktop/Devastor_camera/overlays/overlay_green.png')\
        pad_green = Image.new('RGBA', (ov_width, ov_height))\
        pad_green.paste(img_green, (0, 0), img_green)\
            \
        img_cyan = Image.open('/home/pi/Desktop/Devastor_camera/overlays/overlay_cyan.png')\
        pad_cyan = Image.new('RGBA', (ov_width, ov_height))\
        pad_cyan.paste(img_cyan, (0, 0), img_cyan)\
            \
        img_blue = Image.open('/home/pi/Desktop/Devastor_camera/overlays/overlay_blue.png')\
        pad_blue = Image.new('RGBA', (ov_width, ov_height))\
        pad_blue.paste(img_blue, (0, 0), img_blue)\
            \
        img_violet = Image.open('/home/pi/Desktop/Devastor_camera/overlays/overlay_violet.png')\
        pad_violet = Image.new('RGBA', (ov_width, ov_height))\
        pad_violet.paste(img_violet, (0, 0), img_violet)\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0     # ====== \uc0\u1060 \u1059 \u1053 \u1050 \u1062 \u1048 \u1071  \u1048 \u1053 \u1048 \u1062 \u1048 \u1040 \u1051 \u1048 \u1047 \u1040 \u1062 \u1048 \u1048  \u1043 \u1051 \u1040 \u1042 \u1053 \u1054 \u1043 \u1054  \u1054 \u1050 \u1053 \u1040  ======\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0     def __init__(self):\
        global worksheet_linux\
        global worksheet_usb\
        global workbook_linux\
        global workbook_usb\
        \
        # \uc0\u1089 \u1086 \u1079 \u1076 \u1072 \u1085 \u1080 \u1077  \u1082 \u1085 \u1080 \u1075  \u1085 \u1072  \u1091 \u1089 \u1090 \u1088 \u1086 \u1081 \u1089 \u1090 \u1074 \u1077  \u1080  \u1085 \u1072  USB\
        workbook_linux = xlsxwriter.Workbook('/home/pi/Desktop/Devastor_camera/points.xlsx')\
        worksheet_linux = workbook_linux.add_worksheet()\
        workbook_usb = xlsxwriter.Workbook('/media/pi/8FAT/points.xlsx')\
        worksheet_usb = workbook_usb.add_worksheet()\
\
	# \uc0\u1089 \u1086 \u1079 \u1076 \u1072 \u1085 \u1080 \u1077  \u1079 \u1072 \u1075 \u1086 \u1083 \u1086 \u1074 \u1082 \u1086 \u1074  \u1074  \u1082 \u1085 \u1080 \u1075 \u1077  \u1085 \u1072  \u1091 \u1089 \u1090 \u1088 \u1086 \u1081 \u1089 \u1090 \u1074 \u1077 \
        worksheet_linux.write(0, 0, "Snap_No")\
        worksheet_linux.write(0, 1, "day,month,year")\
        worksheet_linux.write(0, 2, "hour,minute,sec")\
        worksheet_linux.write(0, 3, "impulse_value")\
        worksheet_linux.write(0, 4, "lattitude")\
        worksheet_linux.write(0, 5, "longitude")\
\
	# \uc0\u1089 \u1086 \u1079 \u1076 \u1072 \u1085 \u1080 \u1077  \u1079 \u1072 \u1075 \u1086 \u1083 \u1086 \u1074 \u1082 \u1086 \u1074  \u1074  \u1082 \u1085 \u1080 \u1075 \u1077  \u1085 \u1072  USB\
        worksheet_usb.write(0, 0, "Snap_No")\
        worksheet_usb.write(0, 1, "day,month,year")\
        worksheet_usb.write(0, 2, "hour,minute,sec")\
        worksheet_usb.write(0, 3, "impulse_value")\
        worksheet_usb.write(0, 4, "lattitude")\
        worksheet_usb.write(0, 5, "longitude")\
\
        \
        # \uc0\u1089 \u1086 \u1079 \u1076 \u1072 \u1085 \u1080 \u1077  \u1086 \u1082 \u1085 \u1072 \
        self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)\
        self.window.fullscreen()\
        self.window.set_title("Main")\
        self.window.connect("destroy", lambda w: gtk.main_quit())\
\
        self.entry = gtk.Entry()\
        self.window.show_all()\
        \
        # \uc0\u1089 \u1086 \u1079 \u1076 \u1072 \u1085 \u1080 \u1077  \u1082 \u1086 \u1085 \u1090 \u1077 \u1081 \u1085 \u1077 \u1088 \u1072  \u1074  \u1086 \u1082 \u1085 \u1077 \
        self.fixed = gtk.Fixed()\
        self.fixed.set_name("box")\
        self.window.add(self.fixed)\
        self.fixed.show()\
\
        #darea = gtk.DrawingArea()\
        #darea.size(15, 15)\
        #darea.connect("expose-event", self.expose)\
        \
        #image = gtk.Image()\
        #image.set_from_file("rainbow.png")\
\
	# \uc0\u1082 \u1085 \u1086 \u1087 \u1082 \u1072  \'ab\u1089 \u1085 \u1103 \u1090 \u1100 \'bb\
        #button_capture = gtk.Button("")\
        #button_capture.get_child().set_markup("<span font_desc=\\"20.0\\">SNAP</span>");\
        #button_capture.set_size_request(100, 100)\
        #button_capture.connect("clicked", self.clicked_capture)\
        \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	# \uc0\u1082 \u1085 \u1086 \u1087 \u1082 \u1072  \'ab\u1074 \u1099 \u1093 \u1086 \u1076 \'bb\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0         button_exit = gtk.Button("")\
        button_exit.get_child().set_markup("<span font_desc=\\"20.0\\">EXIT</span>");\
        button_exit.set_size_request(100, 100)\
        button_exit.connect("clicked", self.clicked_exit)\
        \
	# \uc0\u1082 \u1085 \u1086 \u1087 \u1082 \u1072  \'ab\u1087 \u1083 \u1102 \u1089 \'bb\
        #button_plus = gtk.Button("")\
        #button_plus.get_child().set_markup("<span font_desc=\\"30.0\\">+</span>");\
        #button_plus.set_size_request(100, 100)\
        #button_plus.connect("clicked", self.clicked_plus)\
        \
	# \uc0\u1082 \u1085 \u1086 \u1087 \u1082 \u1072  \'ab\u1084 \u1080 \u1085 \u1091 \u1089 \'bb\
        #button_minus = gtk.Button("")\
        #button_minus.get_child().set_markup("<span font_desc=\\"30.0\\">-</span>");\
        #button_minus.set_size_request(100, 100)\
        #button_minus.connect("clicked", self.clicked_minus)\
        \
	# \uc0\u1084 \u1077 \u1090 \u1082 \u1072  \u1076 \u1083 \u1103  \u1086 \u1090 \u1086 \u1073 \u1088 \u1072 \u1078 \u1077 \u1085 \u1080 \u1103  \u1080 \u1085 \u1092 \u1086 \
        impulse_label = gtk.Label("imp")\
        lon_label = gtk.Label("lon")\
        lat_label = gtk.Label("lat")\
        #self.label.set_alignment(20.0, 470)\
        \
		\
	# \uc0\u1088 \u1072 \u1079 \u1084 \u1077 \u1097 \u1077 \u1085 \u1080 \u1077  \u1086 \u1073 \u1098 \u1077 \u1082 \u1090 \u1086 \u1074  \u1074  \u1082 \u1086 \u1085 \u1090 \u1077 \u1081 \u1085 \u1077 \u1088 \u1077 \
        self.fixed.put(button_exit, 700, 380)\
        #self.fixed.put(button_capture, 700, 0)\
        self.fixed.put(impulse_label, 400, 390)\
        self.fixed.put(lon_label, 400, 410)\
        self.fixed.put(lat_label, 400, 430)\
        #self.fixed.put(button_plus, 0, 0)\
        #self.fixed.put(button_minus, 0, 100)\
        #self.fixed.put(darea, 0, 190)\
        #self.fixed.put(image, 15, 190)\
        \
	# \uc0\u1074 \u1099 \u1074 \u1086 \u1076  \u1086 \u1073 \u1098 \u1077 \u1082 \u1090 \u1086 \u1074  \u1086 \u1082 \u1085 \u1072  \u1085 \u1072  \u1101 \u1082 \u1088 \u1072 \u1085 \
        button_exit.show()\
        #button_capture.show()\
        #button_plus.show()\
        #button_minus.show()\
        #darea.show()\
        #image.show()\
        self.window.show()\
        lon_label.show()\
        lat_label.show()\
        impulse_label.show()\
        \
        global nowTime\
        global catched\
        global impulse\
        global data\
        global lat\
        global lon\
        global overlay_now\
        global now_imp\
        global camera\
        global zoomVal\
        zoomVal = 1.0\
        \
        sleep (1)\
	\
	# \uc0\u1091 \u1089 \u1090 \u1072 \u1085 \u1086 \u1074 \u1082 \u1072  \u1087 \u1072 \u1088 \u1072 \u1084 \u1077 \u1090 \u1088 \u1086 \u1074  \u1080  \u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103  \u1082 \u1072 \u1084 \u1077 \u1088 \u1099 \
        camera.framerate = 24\
        camera.preview_fullscreen=False\
        camera.preview_window=(dx, dy, resX, resY)\
        camera.resolution = (resX, resY)\
        sleep (3)\
        camera.start_preview()\
        \
	# \uc0\u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103  \u1086 \u1074 \u1077 \u1088 \u1083 \u1077 \u1103 \
        self.camera_overlay_init()\
        \
	# \uc0\u1089 \u1086 \u1079 \u1076 \u1072 \u1085 \u1080 \u1077  \u1087 \u1088 \u1086 \u1080 \u1075 \u1088 \u1099 \u1074 \u1072 \u1077 \u1084 \u1086 \u1075 \u1086  \u1079 \u1074 \u1091 \u1082 \u1072  \u1080  \u1077 \u1075 \u1086  \u1079 \u1072 \u1094 \u1080 \u1082 \u1083 \u1080 \u1074 \u1072 \u1085 \u1080 \u1077  (99999 \u1094 \u1080 \u1082 \u1083 \u1086 \u1074 )\
        nowTime = millis()\
        mixer.init()\
        mixer.music.load('/home/pi/Desktop/Devastor_camera/alarm.mp3')\
        mixer.music.set_volume(0.001)\
        mixer.music.play(99999)\
        \
        #oldWheel = 0\
        \
	# \uc0\u1075 \u1083 \u1072 \u1074 \u1085 \u1099 \u1081  \u1094 \u1080 \u1082 \u1083  \u1087 \u1088 \u1086 \u1075 \u1088 \u1072 \u1084 \u1084 \u1099 \
        while True:\
	   # \uc0\u1095 \u1080 \u1090 \u1072 \u1077 \u1084  \u1080 \u1085 \u1092 \u1086  \u1089  \u1089 \u1077 \u1088 \u1080 \u1081 \u1085 \u1086 \u1075 \u1086  \u1087 \u1086 \u1088 \u1090 \u1072 \
            try:\
                data = ser.readline()\
            except:\
                print("loading")\
            if data[0:6] == '$GPGGA':\
                # \uc0\u1079 \u1072 \u1087 \u1080 \u1089 \u1100  \u1087 \u1086 \u1083 \u1091 \u1095 \u1077 \u1085 \u1085 \u1086 \u1081  \u1080 \u1085 \u1092 \u1086  \u1074  \u1087 \u1077 \u1088 \u1077 \u1084 \u1077 \u1085 \u1085 \u1099 \u1077 \
		msg = pynmea2.parse(data)\
                latval = msg.lat\
                concatlat = str(latval)[0:10]\
                lat = concatlat\
                longval = msg.lon\
                concatlon = str(longval)[0:10]\
                lon = concatlon\
\
 	    # \uc0\u1082 \u1072 \u1078 \u1076 \u1091 \u1102  \u1089 \u1077 \u1082 \u1091 \u1085 \u1076 \u1091 \
            if (millis() - nowTime > 1000):\
                #camera.annotate_text_size = 40 \
                #camera.annotate_foreground = picamera.Color('black')\
                #camera.annotate_background = picamera.Color('white')\
                #camera.annotate_text = '        In 1 sec: ' + str(impulse) + '                                                                                                                                                                                   ' + str(lat) + ' ' + str(lon)\
                #text_gps =  # + " " + str(lat) + " " str(lon)\
                \
		# \uc0\u1074 \u1099 \u1074 \u1086 \u1076  \u1082 \u1086 \u1083 \u1080 \u1095 \u1077 \u1089 \u1090 \u1074 \u1072  \u1080 \u1084 \u1087 \u1091 \u1083 \u1100 \u1089 \u1086 \u1074  \u1085 \u1072  \u1101 \u1082 \u1088 \u1072 \u1085 \
                impulse_label.set_text(str(impulse))\
                #impulse_label.set_text(str(mcp.read_adc(0)))\
                \
	        # \uc0\u1074 \u1099 \u1074 \u1086 \u1076  \u1096 \u1080 \u1088 \u1086 \u1090 \u1099  \u1080  \u1076 \u1086 \u1083 \u1075 \u1086 \u1090 \u1099  \u1085 \u1072  \u1101 \u1082 \u1088 \u1072 \u1085 \
                lat_label.set_text(str(lat))\
                lon_label.set_text(str(lon))\
                #y = 100+300*(impulse/(MAX_UF * 1.0))\
                #self.moveWidget(darea, y)\
\
                # \uc0\u1091 \u1089 \u1080 \u1083 \u1077 \u1085 \u1080 \u1077  \u1079 \u1074 \u1091 \u1082 \u1072  \u1074  \u1089 \u1086 \u1086 \u1090 \u1074 \u1077 \u1090 \u1089 \u1090 \u1074 \u1080 \u1080  \u1089  \u1082 \u1086 \u1083 \u1080 \u1095 \u1077 \u1089 \u1090 \u1074 \u1086 \u1084  \u1080 \u1084 \u1087 \u1091 \u1083 \u1100 \u1089 \u1086 \u1074 \
                if (impulse < 10): mixer.music.set_volume(0.001)\
                elif (impulse < 30): mixer.music.set_volume(0.05)\
                elif (impulse < 50): mixer.music.set_volume(0.5)\
                elif (impulse >= 50): mixer.music.set_volume(1)\
                \
		# \uc0\u1086 \u1073 \u1085 \u1091 \u1083 \u1077 \u1085 \u1080 \u1077  \u1087 \u1077 \u1088 \u1077 \u1084 \u1077 \u1085 \u1085 \u1099 \u1093  \u1080 \u1084 \u1087 \u1091 \u1083 \u1100 \u1089 \u1086 \u1074  \u1080  \u1074 \u1088 \u1077 \u1084 \u1077 \u1085 \u1080 \
                now_imp = impulse\
                impulse = 0\
                nowTime = millis()\
\
	    # \uc0\u1087 \u1088 \u1086 \u1074 \u1077 \u1088 \u1082 \u1072  \u1085 \u1072 \u1083 \u1080 \u1095 \u1080  \u1080 \u1084 \u1087 \u1091 \u1083 \u1100 \u1089 \u1086 \u1074  \u1074  \u1089 \u1077 \u1082 \u1091 \u1085 \u1076 \u1091 \
            if (GPIO.input(14) == True & catched == True):\
                impulse = impulse + 1\
                catched = False\
            elif (GPIO.input(14) == False):\
                catched = True\
            \
	    # \uc0\u1095 \u1080 \u1090 \u1072 \u1077 \u1084  \u1076 \u1072 \u1085 \u1085 \u1099 \u1077  \u1089  \u1087 \u1086 \u1090 \u1077 \u1085 \u1094 \u1080 \u1086 \u1084 \u1077 \u1090 \u1088 \u1072  \u1076 \u1083 \u1103  \u1079 \u1072 \u1084 \u1080 \u1085 \u1082 \u1072 \
            potVal = mcp.read_adc(0)\
            if (potVal < 140):\
                if (zoomVal != 1.0):\
                    camera.zoom = (0, 0, 1.0, 1.0)\
                    zoomVal = 1.0\
            if (potVal > 150 and potVal < 140*2):\
                if (zoomVal != 0.9):\
                    camera.zoom = (0, 0, 0.9, 0.9)\
                    zoomVal = 0.9\
            if (potVal > 149*2 and potVal < 149*3):\
                if (zoomVal != 0.8):\
                    camera.zoom = (0, 0, 0.8, 0.8)\
                    zoomVal = 0.8\
            if (potVal > 150*3 and potVal < 150*4):\
                if (zoomVal != 0.7):\
                    camera.zoom = (0, 0, 0.7, 0.7)\
                    zoomVal = 0.7\
            if (potVal > 151*4 and potVal < 151*5):\
                if (zoomVal != 0.6):\
                    camera.zoom = (0, 0, 0.6, 0.6)\
                    zoomVal = 0.6\
            if (potVal > 152*6 and potVal < 152*7):\
                if (zoomVal != 0.5):\
                    camera.zoom = (0, 0, 0.5, 0.5)\
                    zoomVal = 0.5\
            if (potVal > 153*7 and potVal < 1024):\
                if (zoomVal != 0.4):\
                    camera.zoom = (0, 0, 0.4, 0.4)\
                    zoomVal = 0.4\
            \
            \
            #oldWheel = mcp.read_adc(0)\
            \
	    #  \uc0\u1094 \u1080 \u1082 \u1083  \u1087 \u1086  pygtk\
            while gtk.events_pending():\
                gtk.main_iteration()    \
        curses.endwin()\
	\
MainWin = MainClass()\
   \
}